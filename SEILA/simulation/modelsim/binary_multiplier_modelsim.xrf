vendor_name = ModelSim
source_file = 1, /home/ufabc/Documentos/binary_multiplier.vhd
source_file = 1, /home/ufabc/Documentos/db/binary_multiplier.cbx.xml
source_file = 1, /home/ufabc/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, /home/ufabc/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, /home/ufabc/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, /home/ufabc/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = binary_multiplier
instance = comp, \Equal1~0\, Equal1~0, binary_multiplier, 1
instance = comp, \k~6\, k~6, binary_multiplier, 1
instance = comp, \k~25\, k~25, binary_multiplier, 1
instance = comp, \k~26\, k~26, binary_multiplier, 1
instance = comp, \k~27\, k~27, binary_multiplier, 1
instance = comp, \k~70\, k~70, binary_multiplier, 1
instance = comp, \KEY[1]~I\, KEY[1], binary_multiplier, 1
instance = comp, \SW[5]~I\, SW[5], binary_multiplier, 1
instance = comp, \SW[9]~I\, SW[9], binary_multiplier, 1
instance = comp, \Q[0]\, Q[0], binary_multiplier, 1
instance = comp, \SW[2]~I\, SW[2], binary_multiplier, 1
instance = comp, \B[2]\, B[2], binary_multiplier, 1
instance = comp, \SW[6]~I\, SW[6], binary_multiplier, 1
instance = comp, \Q[1]\, Q[1], binary_multiplier, 1
instance = comp, \SW[1]~I\, SW[1], binary_multiplier, 1
instance = comp, \B[1]\, B[1], binary_multiplier, 1
instance = comp, \k~2\, k~2, binary_multiplier, 1
instance = comp, \k~3\, k~3, binary_multiplier, 1
instance = comp, \SW[7]~I\, SW[7], binary_multiplier, 1
instance = comp, \Q[2]\, Q[2], binary_multiplier, 1
instance = comp, \k~4\, k~4, binary_multiplier, 1
instance = comp, \k[2]\, k[2], binary_multiplier, 1
instance = comp, \SW[8]~I\, SW[8], binary_multiplier, 1
instance = comp, \Q[3]\, Q[3], binary_multiplier, 1
instance = comp, \k~15\, k~15, binary_multiplier, 1
instance = comp, \k~16\, k~16, binary_multiplier, 1
instance = comp, \k~17\, k~17, binary_multiplier, 1
instance = comp, \Equal0~0\, Equal0~0, binary_multiplier, 1
instance = comp, \k~8\, k~8, binary_multiplier, 1
instance = comp, \SW[3]~I\, SW[3], binary_multiplier, 1
instance = comp, \B[3]\, B[3], binary_multiplier, 1
instance = comp, \Equal0~1\, Equal0~1, binary_multiplier, 1
instance = comp, \datapath_state_func~0\, datapath_state_func~0, binary_multiplier, 1
instance = comp, \k~5\, k~5, binary_multiplier, 1
instance = comp, \k~7\, k~7, binary_multiplier, 1
instance = comp, \k~9\, k~9, binary_multiplier, 1
instance = comp, \SW[0]~I\, SW[0], binary_multiplier, 1
instance = comp, \B[0]\, B[0], binary_multiplier, 1
instance = comp, \k~0\, k~0, binary_multiplier, 1
instance = comp, \k~10\, k~10, binary_multiplier, 1
instance = comp, \k~11\, k~11, binary_multiplier, 1
instance = comp, \k~12\, k~12, binary_multiplier, 1
instance = comp, \k~13\, k~13, binary_multiplier, 1
instance = comp, \k~14\, k~14, binary_multiplier, 1
instance = comp, \k~18\, k~18, binary_multiplier, 1
instance = comp, \k[3]\, k[3], binary_multiplier, 1
instance = comp, \k[0]~feeder\, k[0]~feeder, binary_multiplier, 1
instance = comp, \k[0]\, k[0], binary_multiplier, 1
instance = comp, \k~1\, k~1, binary_multiplier, 1
instance = comp, \k[1]~feeder\, k[1]~feeder, binary_multiplier, 1
instance = comp, \k[1]\, k[1], binary_multiplier, 1
instance = comp, \Mux6~0\, Mux6~0, binary_multiplier, 1
instance = comp, \Mux5~0\, Mux5~0, binary_multiplier, 1
instance = comp, \Mux4~0\, Mux4~0, binary_multiplier, 1
instance = comp, \Mux3~0\, Mux3~0, binary_multiplier, 1
instance = comp, \Mux2~0\, Mux2~0, binary_multiplier, 1
instance = comp, \Mux1~0\, Mux1~0, binary_multiplier, 1
instance = comp, \Mux0~0\, Mux0~0, binary_multiplier, 1
instance = comp, \k~50\, k~50, binary_multiplier, 1
instance = comp, \k~71\, k~71, binary_multiplier, 1
instance = comp, \k~72\, k~72, binary_multiplier, 1
instance = comp, \k~62\, k~62, binary_multiplier, 1
instance = comp, \k~63\, k~63, binary_multiplier, 1
instance = comp, \k~19\, k~19, binary_multiplier, 1
instance = comp, \k~64\, k~64, binary_multiplier, 1
instance = comp, \k~67\, k~67, binary_multiplier, 1
instance = comp, \k~44\, k~44, binary_multiplier, 1
instance = comp, \k~66\, k~66, binary_multiplier, 1
instance = comp, \k~68\, k~68, binary_multiplier, 1
instance = comp, \k~69\, k~69, binary_multiplier, 1
instance = comp, \k~73\, k~73, binary_multiplier, 1
instance = comp, \k[6]\, k[6], binary_multiplier, 1
instance = comp, \k~53\, k~53, binary_multiplier, 1
instance = comp, \k~54\, k~54, binary_multiplier, 1
instance = comp, \k~55\, k~55, binary_multiplier, 1
instance = comp, \k~56\, k~56, binary_multiplier, 1
instance = comp, \k~57\, k~57, binary_multiplier, 1
instance = comp, \k~58\, k~58, binary_multiplier, 1
instance = comp, \k~59\, k~59, binary_multiplier, 1
instance = comp, \k~60\, k~60, binary_multiplier, 1
instance = comp, \k~43\, k~43, binary_multiplier, 1
instance = comp, \k~45\, k~45, binary_multiplier, 1
instance = comp, \k~36\, k~36, binary_multiplier, 1
instance = comp, \k~51\, k~51, binary_multiplier, 1
instance = comp, \k~29\, k~29, binary_multiplier, 1
instance = comp, \k~47\, k~47, binary_multiplier, 1
instance = comp, \k~46\, k~46, binary_multiplier, 1
instance = comp, \k~48\, k~48, binary_multiplier, 1
instance = comp, \k~49\, k~49, binary_multiplier, 1
instance = comp, \k~52\, k~52, binary_multiplier, 1
instance = comp, \k~61\, k~61, binary_multiplier, 1
instance = comp, \k[5]\, k[5], binary_multiplier, 1
instance = comp, \k~21\, k~21, binary_multiplier, 1
instance = comp, \k~20\, k~20, binary_multiplier, 1
instance = comp, \k~22\, k~22, binary_multiplier, 1
instance = comp, \k~23\, k~23, binary_multiplier, 1
instance = comp, \k~24\, k~24, binary_multiplier, 1
instance = comp, \k~28\, k~28, binary_multiplier, 1
instance = comp, \k~32\, k~32, binary_multiplier, 1
instance = comp, \k~31\, k~31, binary_multiplier, 1
instance = comp, \k~30\, k~30, binary_multiplier, 1
instance = comp, \k~33\, k~33, binary_multiplier, 1
instance = comp, \k~37\, k~37, binary_multiplier, 1
instance = comp, \k~38\, k~38, binary_multiplier, 1
instance = comp, \k~39\, k~39, binary_multiplier, 1
instance = comp, \k~34\, k~34, binary_multiplier, 1
instance = comp, \k~35\, k~35, binary_multiplier, 1
instance = comp, \k~40\, k~40, binary_multiplier, 1
instance = comp, \k~41\, k~41, binary_multiplier, 1
instance = comp, \k~42\, k~42, binary_multiplier, 1
instance = comp, \k[4]\, k[4], binary_multiplier, 1
instance = comp, \k~65\, k~65, binary_multiplier, 1
instance = comp, \k~74\, k~74, binary_multiplier, 1
instance = comp, \k~75\, k~75, binary_multiplier, 1
instance = comp, \k~76\, k~76, binary_multiplier, 1
instance = comp, \k[7]\, k[7], binary_multiplier, 1
instance = comp, \Mux13~0\, Mux13~0, binary_multiplier, 1
instance = comp, \Mux12~0\, Mux12~0, binary_multiplier, 1
instance = comp, \Mux11~0\, Mux11~0, binary_multiplier, 1
instance = comp, \Mux10~0\, Mux10~0, binary_multiplier, 1
instance = comp, \Mux9~0\, Mux9~0, binary_multiplier, 1
instance = comp, \Mux8~0\, Mux8~0, binary_multiplier, 1
instance = comp, \Mux7~0\, Mux7~0, binary_multiplier, 1
instance = comp, \KEY[0]~I\, KEY[0], binary_multiplier, 1
instance = comp, \KEY[2]~I\, KEY[2], binary_multiplier, 1
instance = comp, \KEY[3]~I\, KEY[3], binary_multiplier, 1
instance = comp, \SW[4]~I\, SW[4], binary_multiplier, 1
instance = comp, \HEX0[0]~I\, HEX0[0], binary_multiplier, 1
instance = comp, \HEX0[1]~I\, HEX0[1], binary_multiplier, 1
instance = comp, \HEX0[2]~I\, HEX0[2], binary_multiplier, 1
instance = comp, \HEX0[3]~I\, HEX0[3], binary_multiplier, 1
instance = comp, \HEX0[4]~I\, HEX0[4], binary_multiplier, 1
instance = comp, \HEX0[5]~I\, HEX0[5], binary_multiplier, 1
instance = comp, \HEX0[6]~I\, HEX0[6], binary_multiplier, 1
instance = comp, \HEX0[7]~I\, HEX0[7], binary_multiplier, 1
instance = comp, \HEX1[0]~I\, HEX1[0], binary_multiplier, 1
instance = comp, \HEX1[1]~I\, HEX1[1], binary_multiplier, 1
instance = comp, \HEX1[2]~I\, HEX1[2], binary_multiplier, 1
instance = comp, \HEX1[3]~I\, HEX1[3], binary_multiplier, 1
instance = comp, \HEX1[4]~I\, HEX1[4], binary_multiplier, 1
instance = comp, \HEX1[5]~I\, HEX1[5], binary_multiplier, 1
instance = comp, \HEX1[6]~I\, HEX1[6], binary_multiplier, 1
instance = comp, \HEX1[7]~I\, HEX1[7], binary_multiplier, 1
